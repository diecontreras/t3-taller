{"version":3,"sources":["main/chat.jsx","main/map.jsx","main/info.jsx","App.js","index.js"],"names":["socket","io","path","Chat","useState","messages","setMessages","response","setResponse","name","setName","useEffect","on","data","push","prevState","disconnect","className","map","item","index","res","date","Date","toLocaleString","console","log","message","showMessage","type","value","placeholder","onChange","i","target","onClick","emit","Mapa","airplanes","setAirplanes","trace","setTrace","plane","setPlane","aux","code","position","Map","center","zoom","TileLayer","attribution","url","n","avion","polyline","origin","destination","Polyline","pathOptions","color","positions","setLine","Object","keys","key","Marker","Popup","multiline","setPath","Info","showInfo","airline","seats","passengers","p","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95476a68.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {io} from 'socket.io-client';\n\nimport './styles.css';\n\nlet socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/',{\n  path:\"/flights\"\n});\n\nfunction Chat() {\n\n  const [messages, setMessages] = useState([]);\n  const [response, setResponse] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n\n  function sendResponse(){\n    socket.emit('CHAT', {\n      name: name, \n      message: response\n    });\n\n  }\n\n  function showMessage (res, index) {\n    var date = new Date(res.date).toLocaleString();\n    console.log(date);\n    return (<div key={index}> {date} {res.name}: {res.message}</div>);\n  }\n\n  useEffect(() => {\n    socket.on('CHAT', data => {\n      const auxmsg = messages;\n      auxmsg.push(data);\n      setMessages((prevState) => [...prevState, data]);\n    });\n\n    return () => socket.disconnect();\n  }, []);\n\n\n  return (\n    <div className=\"chat\"> \n      <div className=\"chat-window\">\n\n        <h3>Mensajes Recibidos</h3>\n\n        {messages.map((item,index) => showMessage(item, index))}\n\n      </div>\n\n      <div className=\"chat-inputs\">\n\n        <input type=\"text\" className=\"name\" value={name} \n          placeholder=\"Elige un nombre\" onChange={(i) => setName(i.target.value)}/>\n\n        <input type=\"text\" className=\"message\" value={response} \n          placeholder=\"Escribe algo...\" onChange={(i) => setResponse(i.target.value)}/>\n\n        <button onClick={() => sendResponse()} >Enviar</button>\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;","import React, { useState, useEffect } from \"react\";\nimport {io} from 'socket.io-client';\nimport { Map, TileLayer, Marker, Polyline, Popup} from 'react-leaflet';\n\n\nlet socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/',{\n  path:\"/flights\"\n});\n\n\nfunction Mapa(){\n  \n  const [airplanes, setAirplanes] = useState([]);\n  const [trace, setTrace] = useState({});\n  const [plane, setPlane] = useState({});\n\n  function setLine (avion, i) {\n    const polyline = [avion.origin, avion.destination];\n    const blackOption = {color : 'black'};\n    return <Polyline key={i} pathOptions={blackOption} positions={polyline} />\n  }\n  \n  function setMarker (avion) {\n    return <Marker key={avion} position={plane[avion]}>\n            <Popup>{avion}</Popup>\n          </Marker> \n  }\n\n  function setPath (avion, i) {\n    const multiline = trace[avion];\n    const redOption = {color : 'red'};\n    return <Polyline key={i} pathOptions={redOption} positions={multiline} />\n  }\n  \n\n  useEffect(() => {  \n    socket.on('POSITION', data => {\n      // poblar plane\n      setPlane((prevState) => {\n        const aux = {...prevState};\n        aux[data.code] = data.position;\n        return aux;\n      });\n\n      //poblar trace\n      setTrace((prevState) => {\n        const aux = {...prevState};\n        aux[data.code] = prevState[data.code]\n          ? [...prevState[data.code], data.position] : [data.position];\n        return { ...aux };\n      });\n    });\n    \n    return () => socket.disconnect();\n  }, []);\n  \n  \n  useEffect(() => {\n    socket.on('FLIGHTS', data => {\n      setAirplanes((prevState) => [...prevState, ...data]);\n    });\n    \n    socket.emit('FLIGHTS');\n\n    return () => socket.disconnect();\n  }, []);\n\n\n  return (\n  \n  <div className=\"mapa\">\n\n    <h2>Mapa</h2>\n\n    <Map center={[20, 0]} zoom={1.5} >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n\n      {airplanes.map((n, i) => setLine(n,i))}\n      \n      {Object.keys(plane).map((key) => setMarker(key))}\n\n      {Object.keys(trace).map((key) => setPath(key))}\n\n\n    </Map>\n\n\n    </div>\n  );\n}\n\nexport default Mapa;","import React, { useState, useEffect } from \"react\";\nimport {io} from 'socket.io-client';\n\nimport './styles.css';\n\nlet socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl/',{\n  path:\"/flights\"\n});\n\nfunction Info() {\n\n  const [airplanes, setAirplanes] = useState([]);\n\n  function requestInfo() {\n    socket.emit('FLIGHTS');\n  }\n\n  function showPassengers(p, i){\n    return <div className=\"pipul\"> {i+1}.- {p.name}</div>\n  }\n\n  function showInfo(plane, index) {\n    return( \n      <div className=\"airplane-container\">\n        <p>Aerolínea: {plane.airline}</p>\n        <p>Vuelo: {plane.code}</p>\n        <p>Origen: {plane.origin[0]}, {plane.origin[1]}</p>\n        <p>Destino: {plane.destination[0]}, {plane.destination[1]}</p>\n        <p>Avión: {plane.plane}</p>\n        <p>Cantidad de asientos: {plane.seats}</p>\n        {plane.passengers.map((item, index) => showPassengers(item, index))}\n      </div> \n    );\n  }\n\n  useEffect(() => {\n    socket.on('FLIGHTS', data =>{\n      setAirplanes(data);\n    });\n\n    return () => socket.disconnect();\n  }, []);\n\n  return(\n    <div className=\"info\">\n      <h2>Info Aviones</h2>\n      <button className=\"boton\" onClick={() => requestInfo()}> Obtener Info</button>\n      {airplanes.map((item, index) => showInfo(item, index))}\n    </div>\n  );\n}\n\nexport default Info;","import './App.css';\n\nimport Chat from './main/chat'\nimport Mapa from './main/map'\nimport Info from './main/info'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"row\">\n        <div className=\"map-container\"> \n          <Mapa />\n        </div>\n        <div className=\"info-container\">\n          <Info />\n        </div>\n        </div>\n\n\n        \n        <div className=\"chat-container\">\n          <Chat />\n        </div>\n      </header>\n      <footer className=\"footer\"> \n\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}